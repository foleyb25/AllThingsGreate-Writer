<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<div id="blog-list">
<div class="container-fluid pt-5 pb-5">
  <h1 class="text-center">Welcome <%= me.fullName %></h1>
    <p class="text-center">Here is a list of your blogs</p>
    <div class="col text-center">
        <a href="/blog/create" class="btn btn-info">Add New Blog</a>
    </div>  

    <div id="app" v-cloak style="padding: 24px">

        <!-- modal container -->
        <div v-if="shouldShowDeleteConfirmation" class="modal-container">
            <div class="modal-form">
                <div>
                    Are you sure you want to delete {{selectedBlogToDelete.title}}?
                </div>

                <div style="margin-top: 16px; display: flex">
                    <div style="flex: 1"></div>
                    <button v-on:click="shouldShowDeleteConfirmation = false">Cancel</button>
                    <button v-on:click="confirmDelete()" 
                        v-bind:class="[isDeletingBlog ? 'gray' : 'red']"
                        style="color: white; 
                        margin-left: 16px;">Delete</button>
                </div>
            </div>            
        </div>

        <!-- Blog posts -->
        
            <div v-for="blog in blogs">
                <div class="article-box">
                <a :href="'/blog/edit/' +blog.id">
                    <%- partial('../partials/blog') %>
                </a>
                </div>
                <div style="text-align: center; align-content: center;">
                    <button class="btn btn-danger"v-on:click="deleteBlog(blog)">Delete Blog</button>
                    <div v-if="!blog.isReviewed" style="background-color: rgb(216, 212, 4); width: 30%; margin: auto; margin-top: 8px;
                    border-radius: 8px;">
                        Needs Reviewed
                    </div>
                    <div v-if="blog.isArchived" style="background-color: rgb(66, 0, 128); width: 30%; margin: auto; margin-top: 8px;
                    border-radius: 8px; color:white;">
                        Archived Blog
                    </div>
                </div>
            </div>
    </div>
</div>
</div>
<%- exposeLocalsToBrowser({keys: ['blogs']}) %>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
console.log(window.SAILS_LOCALS.pct)
    const App = new Vue({
        el: '#app',
        data: {
            blogs: window.SAILS_LOCALS.blogs,
            shouldShowDeleteConfirmation: false,
            selectedBlotToDelete: null,
            isDeletingBlog: false,
            colorpct: window.SAILS_LOCALS.pct,

            // Blog creation State variables
            isCreatingBlog: false,
            blogBodyText: null,
            blogFileImageSource: null,
            selectedFile: null,
            shouldShowBlogForm: false,
        },
        methods: {
            confirmDelete: async function() {
                const blogId = this.selectedBlogToDelete.id

                try {
                    this.isDeletingBlog = true
                    await axios.delete(`/blog/${blogId}`)
                    this.shouldShowDeleteConfirmation = false
                    this.blogs = this.blogs.filter(p => {
                        return p.id != this.selectedBlogToDelete.id
                    })
                    this.isDeletingBlog = false
                } catch (err) {
                    this.isDeletingBlog = false
                    console.error(err.toString())
                }
            },
            deleteBlog: async function(blog) {
                this.selectedBlogToDelete = blog
                this.shouldShowDeleteConfirmation = true
                return 
            },
            createBackgroundGradient(blog) {
                const rating = blog.rating
                const numberOfRatings = blog.numberOfRatings * 5
                const colorpct = (rating / numberOfRatings) * 100
                const styleString = `linear-gradient(to right, yellow ${colorpct}%, white ${colorpct}%)`;
                return styleString
            }
        },
        computed: {
            createBackgroundGradient() {
                return `linear-gradient(to right, yellow ${this.colorpct}%, white ${this.colorpct}%)`;
            }
        }
    })
</script>


    
