<h1 class="text-center">Welcome <%= me.fullName %></h1>
<p class="text-center">Here is a list of your blogs</p>
<div class="col text-center">
    <a href="/blog/create" class="btn btn-info">Add New Blog</a>
</div>  
<div id="app" v-cloak class="d-flex flex-column justify-content-center">
    <div class="container-fluid d-flex flex-column justify-content-center" style="max-width: 620px;">
        <div v-for="blog in blogs" class="mt-5">
            <a :href="'/blog/edit/' +blog.id">
                <%- partial('../partials/blog') %>
            </a>
            <div class="w-100 m-2 d-flex flex-column justify-content-center align-items-center text-center">
                <div v-if="!blog.isArchived">
                    <button style="background-color: rgb(130, 107, 151); color:white; margin: auto; margin-top: 8px; border-radius: 8px;" v-on:click="archive(blog)">Archive Blog</button>
                </div>
                <div v-if="blog.isArchived">
                    <button style="background-color: rgb(77, 14, 133); color:white; margin: auto; margin-top: 8px; border-radius: 8px;" v-on:click="unarchive(blog)">Un-Archive Blog</button>
                </div>
            </div>
        </div>
        <div v-if="isMore" style="margin: auto; text-align: center;">
            <button class="btn btn-info" v-on:click="paginate()">Load More</button>
        </div>
    </div>
</div>
<%- exposeLocalsToBrowser({keys: ['blogs', 'pageNum', 'isMore']}) %>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
console.log(window.SAILS_LOCALS.pct)
    const App = new Vue({
        el: '#app',
        data: {
            blogs: window.SAILS_LOCALS.blogs,
            shouldShowDeleteConfirmation: false,
            selectedBlotToDelete: null,
            isDeletingBlog: false,
            colorpct: window.SAILS_LOCALS.pct,
            pageNum: window.SAILS_LOCALS.pageNum,
            isMore: window.SAILS_LOCALS.isMore,
            // Blog creation State variables
            isCreatingBlog: false,
            blogBodyText: null,
            blogFileImageSource: null,
            selectedFile: null,
            shouldShowBlogForm: false,
        },
        methods: {
            archive: async function(blog) {
                var bloginThis = blog
                var blogTitle = blog.title
                const formData = new FormData()
                var thisBlogId = blog.id
                formData.append('blogId', blog.id)
                try {
                    await axios.put('/blog/archive', formData)
                    location.reload()
                } catch (err) {
                    console.error(err.toString())
                }
            },

            unarchive: async function(blog) {
                const formData = new FormData()
                formData.append('blogId', blog.id)
                try {
                    await axios.put('/blog/unarchive', formData)
                    location.reload()
                } catch (err) {
                    console.error(err.toString())
                }
            },
            paginate: async function()  {
                console.log("Paginate")
                const nextPage = this.pageNum + 1
                const formData = new FormData()
                formData.append('pageNum', nextPage)
                try {
                    const res = await axios.put('/paginate-home', formData)
                    this.isMore = res.data.isMore
                    this.blogs.push.apply(this.blogs, res.data.blogs)
                    this.pageNum = nextPage
                } catch (err) {
                    console.error(err.toString())
                }
            }
        },
        computed: {
        }
    })
</script>


    
